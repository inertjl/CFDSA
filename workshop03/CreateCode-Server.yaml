---
#Create PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cs-vol
  namespace: codeserverns
  labels:
    name: codeserver
spec:
  storageClassName: do-block-storage 
  accessModes: 
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
#Create deploy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cs-deploy
  namespace: codeserverns
  labels:
    name: codeserver
spec:
  replicas: 1
  selector:
    matchLabels:
      name: codeserver
  template:
    metadata:
      name: cs-po
      labels:
        name: codeserver
    spec:
      volumes: 
      - name: workspace-vol
        persistentVolumeClaim:
          claimName: cs-vol
      containers:
      - name: cs-container
        image: linuxserver/code-server:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 200m
            memory: 256M
          limits:
            cpu: 200m
            memory: 256M
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              name: cs-config
              key: TZ
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: cs-secret
              key: PASSWORD
        - name: SUDO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cs-secret
              key: SUDO_PASSWORD
        - name: DEFAULT_WORKSPACE
          valueFrom:
            configMapKeyRef:
              name: cs-config
              key: DEFAULT_WORKSPACE
        - name: PROXY_DOMAIN
          valueFrom:
            configMapKeyRef:
              name: cs-config
              key: PROXY_DOMAIN
        ports:
          - containerPort: 8443
        volumeMounts:
          - name: workspace-vol
            mountPath: /config/workspace

---
#Create svc
apiVersion: v1
kind: Service
metadata:
  name: cs-svc
  namespace: codeserverns
  labels:
    name: codeserver
spec:
  type: ClusterIP
  selector:
    name: codeserver
  ports:
  - name: cs-svc-port
    port: 8443
    targetPort: 8443

---
#create Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cs-ing
  namespace: codeserverns
  labels:
    name: codeserver
spec:
  ingressClassName: nginx
  rules:
  - host: code-167.99.30.188.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cs-svc
            port:
              number: 8443
