---
#create headless service
apiVersion: v1
kind: Service
metadata:
  name: minio-hsvc
  namespace: minio-ns
  labels:
    name: minio-hsvc
spec:
  clusterIP: None
  selector:
    name: minio-po
  ports:
  - name: data
    port: 9000
    targetPort: 9000
  - name: console
    port: 9090
    targetPort: 9090

---
#create statefulset
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio-sts
  namespace: minio-ns
spec:
  replicas: 4
  serviceName: minio-hsvc
  selector:
    matchLabels:
      name: minio-po
  volumeClaimTemplates:
  - metadata:
      name: data-vol
    spec:
      accessModes: [ ReadWriteOnce]
      storageClassName: do-block-storage
      resources:
        requests:
          storage: 1Gi
  template:
    metadata:
      name: minio-po
      labels:
        name: minio-po
    spec:
      initContainers:
      - name: busybox
        image: busybox
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - "chown 1001:1001 /data"
        volumeMounts:
        - name: data-vol
          mountPath: /data
      containers:
      - name: minio-container
        image: bitnami/minio:latest
        imagePullPolicy: IfNotPresent
        command:
        - minio
        - server
        - --address=:9000
        - --console-address=:9090
        - http://minio-sts-{0...3}.minio-hsvc.minio-ns.svc.cluster.local/data
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            configMapKeyRef:
              name: minio-config
              key: MINIO_ROOT_USER
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: MINIO_ROOT_PASSWORD
        ports:
        - name: data
          containerPort: 9000
        - name: console
          containerPort: 9090
        volumeMounts:
        - name: data-vol
          mountPath: /data
        # livenessProbe:
        #   httpGet: 
        #     path: /minio/health/live
        #     port: 9000
        #   timeoutSeconds: 3
        #   periodSeconds: 30
        #   failureThreshold: 3
        # readinessProbe:
        #   httpGet: 
        #     path: /minio/health/ready
        #     port: 9000

---
#create Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-ing
  namespace: minio-ns
  labels:
    name: minio
spec:
  ingressClassName: nginx
  rules:
  - host: data-167.99.30.188.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-hsvc
            port:
              number: 9000
  - host: console-167.99.30.188.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio-hsvc
            port:
              number: 9090
